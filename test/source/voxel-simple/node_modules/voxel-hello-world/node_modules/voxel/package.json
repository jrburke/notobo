{
  "name": "voxel",
  "description": "tools to work with voxel generation and chunking in javascript",
  "version": "0.3.1",
  "main": "index.js",
  "dependencies": {
    "inherits": "1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/maxogden/voxel.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "author": {
    "name": "Max Ogden",
    "email": "max@maxogden.com"
  },
  "license": "MIT",
  "engine": {
    "node": ">=0.6.0"
  },
  "devDependencies": {
    "microtime": "~0.3.3"
  },
  "peerDependencies": {
    "voxel-engine": ">=0.9.0"
  },
  "readme": "# voxel\n\nvoxel geometry generation and meshing algorithms in javascript. written by @mikolalysenko and put on npm by me.\n\n- original repo: https://github.com/mikolalysenko/mikolalysenko.github.com/tree/master/MinecraftMeshes2\n- blog post: http://0fps.wordpress.com/2012/07/07/meshing-minecraft-part-2/\n- webgl demo: http://mikolalysenko.github.com/MinecraftMeshes2/\n\n# installation\n\nin node:\n```\nnpm install voxel\n```\nin a browser:\n\nuse `voxel-browser.js`\n\n# usage\n\n## require('voxel').generate(low, high, iterator)\n\nwhere `low` and `high` are `[x, y, z]` start and end positions to iterate over and `iterator` is the function that visits each voxel\n\nreturns an object like this: `{ \"voxels\": \"a 1D Int32Array filled with voxel data\", \"dims\": [x, y, z] }`\n\nexample that creates randomly colored voxels:\n\n```javascript\nrequire('voxel').generate([0,0,0], [16,16,16], function(x,y,z) {\n  return Math.round(Math.random() * 0xffffff)\n})\n```\n\na sphere:\n\n```javascript\nrequire('voxel').generate([0,0,0], [32,32,32], function(x,y,z) {\n  return x*x+y*y+z*z <= 16*16 ? 0x113344 : 0\n})\n```\n\nusing the included generator functions:\n\n```javascript\nvar voxel = require('voxel')\nvoxel.generate([0,0,0], [32,32,32], voxel.generator['Hilly Terrain'])\n// or\nvoxel.geometry['Hilly Terrain'] // pre-generated at some specific example size\n```\n\n## require('voxel').meshers\n\n`meshers` is an object with `stupid`, `culled`, `monotone` and `greedy` mesher functions. you probably want to just use `greedy`. all mesher functions accept voxel data in the format the gets returned by the `generate` function.\n\n## require('voxel').generator\n\nan object that contains a bunch of voxel generation functions to play with, from http://mikolalysenko.github.com/MinecraftMeshes2/\n\n## require('voxel').generateExamples()\n\nreturns an object that contains a bunch of pre-generated voxel geometries to play with, from http://mikolalysenko.github.com/MinecraftMeshes2/\n\n# license\n\nMIT",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/maxogden/voxel/issues"
  },
  "_id": "voxel@0.3.1",
  "dist": {
    "shasum": "fed5f65ac11d0a96e99fa5e5efe9108b25ce82c9"
  },
  "_from": "voxel@0.3.1",
  "_resolved": "https://registry.npmjs.org/voxel/-/voxel-0.3.1.tgz"
}
