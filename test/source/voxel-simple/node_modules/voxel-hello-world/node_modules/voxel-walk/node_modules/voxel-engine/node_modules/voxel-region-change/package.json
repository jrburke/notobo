{
  "name": "voxel-region-change",
  "description": "get events when the player changes voxels or chunks",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "git@github.com:maxogden/voxel-region-change.git"
  },
  "dependencies": {
    "aabb-3d": "0.0.0"
  },
  "devDependencies": {
    "browservefy": "0.0.1",
    "painterly-textures": "0.0.3",
    "voxel-engine": "0.4.3"
  },
  "scripts": {
    "start": "echo \"open localhost:8080/\" && ./node_modules/.bin/browservefy demo.js 8080 -- -d"
  },
  "readme": "# voxel-region-change\n\nget events when the player changes voxels or chunks\n\n```\nnpm install voxel-region-change\n```\n\n## usage\n\n```javascript\nvar regionChange = require('voxel-region-change')\n```\n\n## regionChange(spatialEE, aabb3D, regionWidth)\n\nwhere `spatialEE` is a [spatial event emitter](http://github.com/chrisdickinson/spatial-events), `aabb3D` is a [aabb-3d](http://github.com/chrisdickinson/aabb-3d) and `regionWidth` is some number\n\n`box` is optional and will default to `aabb3d([-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity])`\n\n## regionChangeInstance.on('change', function(pos) {})\n\nthis will emit each time the spatial event emitter emits a region that is beyond your regionWidth. it will emit a position object with x, y and z equal to `[Math.floor(pos.x / regionWidth), Math.floor(pos.y / regionWidth), Math.floor(pos.z / regionWidth)]`\n\n## license\n\nBSD",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/maxogden/voxel-region-change/issues"
  },
  "_id": "voxel-region-change@0.0.2",
  "dist": {
    "shasum": "39c12300bd66aacb193bed89fb2b11855d7c32b9"
  },
  "_from": "voxel-region-change@0.0.2",
  "_resolved": "https://registry.npmjs.org/voxel-region-change/-/voxel-region-change-0.0.2.tgz"
}
