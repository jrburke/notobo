{
  "name": "tic",
  "description": "intervals and timeouts using a delta tick. Useful for timing things with games.",
  "version": "0.2.1",
  "homepage": "https://github.com/shama/tic",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/tic.git"
  },
  "bugs": {
    "url": "https://github.com/shama/tic/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/tic/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "keywords": [
    "tick",
    "timer"
  ],
  "readme": "# tic\n\nintervals and timeouts using a delta tick. Useful for timing things with games.\n\n## example\n\n```js\nvar tic = require('tic')();\n\nvar clearInterval = tic.interval(function(param1) {\n  console.log(param1 + ' 5 tick seconds!');\n}, 5000, 'Every');\n\nvar clearTimeout = tic.timeout(function() {\n  console.log('Only once after 10 tick seconds!');\n}, 10000);\n\ngame.on('tick', function(dt) {\n  tic.tick(dt);\n});\n```\n\n## api\n\n### `require('tic')()`\nReturns an instance of a Tic timer.\n\n### `tic.interval(fn, time, [param1, param2, ...])`\nRuns the function `fn` at the given `time` interval.\n\n### `tic.timeout(fn, time, [param1, param2, ...])`\nRuns the function `fn` only once at the given `time`.\n\n### `tic.tick(delta)`\nUse to advance the timer.\n\n## install\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install tic\n```\n\n## release history\n* 0.2.1 - fix bug with clearing timer\n* 0.2.0 - now returns an instance of Tic for multiple timers\n* 0.1.0 - initial release\n\n## license\nCopyright (c) 2013 Kyle Robinson Young<br/>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "tic@0.2.1",
  "dist": {
    "shasum": "c08677160ef61afe4e93f7da76a7200200a46906"
  },
  "_from": "tic@0.2.1",
  "_resolved": "https://registry.npmjs.org/tic/-/tic-0.2.1.tgz"
}
