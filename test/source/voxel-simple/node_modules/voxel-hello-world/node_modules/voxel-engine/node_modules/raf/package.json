{
  "name": "raf",
  "version": "0.0.1",
  "description": "requestAnimationFrame polyfill library",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/raf.git"
  },
  "keywords": [
    "requestAnimationFrame",
    "polyfill"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~0.1.5"
  },
  "testling": {
    "files": "test.js",
    "browsers": {
      "ie": [
        9
      ],
      "firefox": [
        4,
        13
      ],
      "chrome": [
        20
      ],
      "safari": [
        5.1
      ],
      "opera": [
        11,
        12
      ]
    }
  },
  "readme": "# raf\n\n[![browser support](http://ci.testling.com/chrisdickinson/raf.png)](http://ci.testling.com/chrisdickinson/raf)\n\nreqeustAnimationFrame polyfill for browserify.\n\n```javascript\nvar raf = require('raf')\n  , canvas = document.getElementById('opengl')\n\nraf(canvas)\n  .on('data', function(dt) {\n    console.log('difference in time is '+dt+'ms')\n  })\n\n\n```\n\n# API\n\n## raf([optional element]) -> event emitter\n\nreturns a event emitter that immediately starts emitting 'data'\nevents representing animation frames for a given element (or for the entire\nwindow, if no element is passed).\n\n## ee.pause() / ee.resume()\n\npauses or resumes the events coming out of `ee`.\n\nthe `dt` on the next event after a resume will represent the difference between\nthe last rendered frame and the newest frame.\n\n## raf.polyfill\n\nthe polyfilled `requestAnimationFrame` function.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chrisdickinson/raf/issues"
  },
  "_id": "raf@0.0.1",
  "dist": {
    "shasum": "c4e2145cfc086e6e3385f04d126935cbcfcc089f"
  },
  "_from": "raf@0.0.1",
  "_resolved": "https://registry.npmjs.org/raf/-/raf-0.0.1.tgz"
}
